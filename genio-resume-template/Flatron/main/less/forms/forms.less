// $VARIABLES
// ========================================

// #layout
@input-padding-vertical      : 0.8em; 
@input-padding-horizontal    : 0.8em;
@input-border-width          : 1px;
@form-group-bottom-spacing   : 1.5em;

// #typography
@input-font-size-base        : @font-size-base;
@input-font-size-small       : @input-font-size-base * 0.75; 
@input-font-size-large       : @input-font-size-base * 1.2; 

// #colors

// legend
@legend-color                : @black-90;
@legend-border-color         : @black-10;

// input
@input-border                : @black-10;
@input-bg-disabled           : lighten(@black-10, 7);
@input-focus-border-color    : @info-color;

// placeholder
@input-color-placeholder     : @black-20;

// validation
@input-success-bg            : @success-color;
@input-success-color         : darken(@success-color, 30%); 
@input-warning-bg            : @warning-color;
@input-warning-color         : darken(@warning-color, 30%); 
@input-danger-bg             : @danger-color;
@input-danger-color          : darken(@danger-color, 30%); 

// $MIXINS
// ========================================

.placeholder(@color: @input-color-placeholder) 
{
	&::-moz-placeholder 
	{
		color: @color;
		opacity: 1;
		.transition( color 0.35s ease-in-out )
	}

	&:-ms-input-placeholder       
	{ 
		color: @color; 
		.transition( color 0.35s ease-in-out )
	}

	&::-webkit-input-placeholder  
	{ 
		color: @color;
		.transition( color 0.35s ease-in-out ) 
	}
}

.form-control-validation(@text-color: #555; @border-color: #ccc) 
{
	.help-block,
	.control-label,
	.radio,
	.checkbox,
	.radio-inline,
	.checkbox-inline,
	&.radio label,
	&.checkbox label,
	&.radio-inline label,
	&.checkbox-inline label { color: @text-color; }

	.form-control 
	{
		border-color: @border-color;

		&:focus { border-color: darken(@border-color, 10%); }
	}

	.form-control-feedback { color: @text-color; }
}

// $STYLES
// ========================================

fieldset { min-width: 0; }

legend 
{
	display: block;
	width: 100%;
	font-size: (@font-size-base * 1.5);
	color: @legend-color;
	border-bottom: 1px solid @legend-border-color;
}

label 
{
	display: inline-block;
	max-width: 100%;
	padding-top: @input-padding-vertical;
	padding-bottom: @input-padding-vertical;
}

// Position radios and checkboxes better
input[type="radio"],
input[type="checkbox"] { line-height: normal; }

// Set the height of file controls to match text inputs
input[type="file"] { display: block; }

// Make range inputs behave like textual form controls
input[type="range"] 
{
	display: block;
	width: 100%;
}

// Make multiple select elements height not fixed
select[multiple],
select[size] { height: auto; }

// Adjust output element
output { display: block; }

.form-control 
{
	display: block;
	width: 100%;
	padding: @input-padding-vertical @input-padding-horizontal;
	background-image: none;
	border: @input-border-width solid @input-border;
	.transition(all 0.35s ease-in-out);

	// Placeholder
	.placeholder();

	&[disabled],
	fieldset[disabled] & 
	{
		cursor: not-allowed;
		background-color: @input-bg-disabled;
		opacity: 1; // iOS fix for unreadable disabled content
	}

	&[readonly] { cursor: default; }

	textarea& { height: auto; }

	&:not([readonly]):focus 
	{ 
		border-color: @input-focus-border-color; 
		.placeholder( darken(@input-color-placeholder, 7%) )
	}

}

// Checkboxes and radios
.radio,
.checkbox 
{
	position: relative;
	display: block;

	label 
	{
		font-weight: normal;
		cursor: pointer;
	}
}

.radio input[type="radio"],
.radio-inline input[type="radio"],
.checkbox input[type="checkbox"],
.checkbox-inline input[type="checkbox"] { position: absolute; }

// Radios and checkboxes on same line
.radio-inline,
.checkbox-inline 
{
	display: inline-block;
	padding-left: 20px;
	margin-bottom: 0;
	vertical-align: middle;
	font-weight: normal;
	cursor: pointer;
}

.radio-inline + .radio-inline,
.checkbox-inline + .checkbox-inline { margin-top: 0; }

// Note: Neither radios nor checkboxes can be readonly.
input[type="radio"],
input[type="checkbox"] 
{
	&[disabled],
	&.disabled,
	fieldset[disabled] & { cursor: not-allowed; }
}

// These classes are used directly on <label>s
.radio-inline,
.checkbox-inline 
{
	&.disabled,
	fieldset[disabled] & { cursor: not-allowed; }
}

// These classes are used on elements with <label> descendants
.radio,
.checkbox 
{
	&.disabled,
	fieldset[disabled] & 
	{
		label { cursor: not-allowed; }
	}
}

// Static form control text
.form-control-static 
{
	padding-top: @input-padding-vertical;
	padding-bottom: @input-padding-vertical;
}

// Form control sizing
.input-sm,
.form-group-sm .form-control { font-size: @input-font-size-small; }

.input-lg,
.form-group-lg .form-control { font-size: @input-font-size-large; }

.has-left-icon
{
	position: relative;

	.left-icon
	{
		position: absolute;
		left: @input-padding-horizontal;
		top: 50%;
		.translate(0%, -50%)      
	}

	.form-control { padding-left: 4 * @input-padding-horizontal; }
}

// Form control feedback states
.has-feedback 
{
	// Enable absolute positioning
	position: relative;

	.form-control { padding-right: 4 * @input-padding-horizontal; }
}

// Feedback icon (requires .glyphicon classes)
.form-control-feedback 
{
	position: absolute;
	top: 50%;
	.translate(0%, -50%);
	right: @input-padding-horizontal;
	z-index: 2; // Ensure icon is above input groups
	display: block;
	text-align: center;
	pointer-events: none;
}

// Feedback states
.has-success { .form-control-validation(@input-success-color; @input-success-color); }
.has-warning { .form-control-validation(@input-warning-color; @input-warning-color); }
.has-error   { .form-control-validation(@input-danger-color; @input-danger-color); }

// Help text
.help-block { display: block; }

// Inline forms
.form-inline 
{

	label { padding-top: 0; }

	// Kick in the inline
	@media (min-width: @screen-sm-min) 
	{
		// Inline-block all the things for "inline"
		.form-group 
		{
			display: inline-block;
			margin-bottom: 0;
			vertical-align: middle;

		}

		.form-control 
		{
			display: inline-block;
			width: auto; // Prevent labels from stacking above inputs in `.form-group`
			vertical-align: middle;
		}

		// Make static controls behave like regular ones
		.form-control-static { display: inline-block; }

		.input-group 
		{
			display: inline-table;
			vertical-align: middle;
		}

		.control-label { vertical-align: middle; }

		.radio,
		.checkbox 
		{
			display: inline-block;
			vertical-align: middle;
		}

		.radio input[type="radio"],
		.checkbox input[type="checkbox"] { position: relative; }

	}
}


// Horizontal forms
.form-horizontal 
{
	.form-group { .make-row(); }

	@media (min-width: @screen-sm-min) 
	{
		.control-label { text-align: right; }
	}

	// Form group sizes
	.form-group-lg 
	{
		@media (min-width: @screen-sm-min) 
		{
			.control-label { font-size: @input-font-size-large }
		}
	}
	.form-group-sm 
	{
		@media (min-width: @screen-sm-min) 
		{
			.control-label { font-size: @input-font-size-small }
		}
	}
}

// custom checkboxes
.checkbox
{

	label
	{
		vertical-align: top;
		line-height: 18px;
		padding-top: 0;

		&:last-child { padding-left: 1em; }
	}

	.custom-element 
	{
		width: 18px;
		height: 18px;

		input[type="checkbox"] { visibility: hidden; }

		.fancy-checkbox
		{
			position: relative;
			width: 18px;
			height: 18px;
			display: inline-block;
			border: 1px solid @input-border;
			text-align: center;

			&:before
			{
				content: "\f00c";
				display: block;
				font-family: "FontAwesome";
				font-size: 12px;
				line-height: 16px;
				opacity: 0;
				color: @input-focus-border-color;
			}
		}

		input[type="checkbox"]:checked + .fancy-checkbox
		{
			border-color: @input-focus-border-color;

			&:before { opacity: 1 }         
		}
	}

	&.disabled { opacity: 0.5; }
} 

// form group
.form-group + .form-group { margin-top: @form-group-bottom-spacing; }

// custom radios
.radio
{

	label
	{
		vertical-align: top;
		line-height: 18px;
		padding-top: 0;

		&:last-child { padding-left: 1em; }
	}

	.custom-element 
	{
		width: 18px;
		height: 18px;

		input[type="radio"] { visibility: hidden; }

		.fancy-radio
		{
			position: relative;
			width: 18px;
			height: 18px;
			.border-radius(50%);
			display: inline-block;
			border: 1px solid @input-border;
			text-align: center;

			&:before
			{
				content: '';
				display: block;
				position: absolute;
				width: 6px;
				height: 6px;
				.border-radius(50%);
				top: 5px;
				left: 5px;
				opacity: 0;
				background-color: @input-focus-border-color;
			}
		}

		input[type="radio"]:checked + .fancy-radio
		{
			border-color: @input-focus-border-color;

			&:before { opacity: 1 }         
		}
	}

	&.disabled { opacity: 0.5; }
}

// Input groups
.input-group 
{
	position: relative; // For dropdowns
	display: table;
	border-collapse: separate; // prevent input groups from inheriting border styles from table cells when placed within a table
	width: 100%;

	// Undo padding and float of grid classes
	&[class*="col-"] 
	{
		float: none;
		padding-left: 0;
		padding-right: 0;
	}

	.form-control 
	{
		position: relative;
		z-index: 2;
		float: left;
		width: 100%;
		margin-bottom: 0;
	}
}

.input-group-btn,
.input-group-addon,
.input-group .form-control 
{
	display: table-cell;
	vertical-align: middle;
}

.input-group .form-control 
{
	width: 100%;

	+ .input-group-btn   
	{
		> .btn       
		{ 
			border-top-left-radius: 0;
			border-bottom-left-radius: 0;
		}
	}

	+ .input-group-addon 
	{ 
		border-left-width: 0; 
		border-right-width: @input-border-width;
	}
}

// Addon and addon wrapper for buttons
.input-group-btn 
{
	width: 1px;
	white-space: nowrap;
	vertical-align: middle; // Match the inputs
	.border-radius(0);
}

.input-group-addon 
{
	width: 1px;
	padding: 0 ( 1.5 * @input-padding-horizontal );
	text-align: center;
	border: @input-border-width solid @input-border;
	border-right-width: 0;
}

// Button input groups
.input-group-btn 
{
	position: relative;
	font-size: 0;
	white-space: nowrap;

	> .btn 
	{
		position: relative;
		padding-top: 0;
		padding-bottom: 0;
		height: 100%;
		z-index: 2;

		&:not(button):before
		
		{
			content: '';
			display: block;
			height: 50%;
			margin-bottom: -0.5em;
		}
	}

	&:first-child 
	{
		>.btn 
		{
			border-top-right-radius: 0;
			border-bottom-right-radius: 0;
		}
	}
}